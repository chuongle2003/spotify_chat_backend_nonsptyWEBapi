   server {
       listen 80;
       server_name 3.27.160.138 spotifybackend.shop;

       # Redirect HTTP to HTTPS for domain name
       if (\System.Management.Automation.Internal.Host.InternalHost = spotifybackend.shop) {
           return 301 https://\System.Management.Automation.Internal.Host.InternalHost\;
       }

       client_max_body_size 100M;

       location /.well-known/acme-challenge/ {
           root /var/www/certbot;
       }

       location /static/ {
           alias /app/static/;
           expires 30d;
       }

       location /media/ {
           alias /app/media/;
           mp4_buffer_size 1m;
           mp4_max_buffer_size 5m;
           expires 7d;
       }

       location / {
           proxy_pass http://web:8000;
           proxy_set_header Host \System.Management.Automation.Internal.Host.InternalHost;
           proxy_set_header X-Real-IP \;
           proxy_set_header X-Forwarded-For \;
           proxy_set_header X-Forwarded-Proto \;
       }

       location /ws/ {
           proxy_pass http://web:8000;
           proxy_http_version 1.1;
           proxy_set_header Upgrade \;
           proxy_set_header Connection "upgrade";
           proxy_set_header Host \System.Management.Automation.Internal.Host.InternalHost;
           proxy_set_header X-Real-IP \;
       }
   }

   # HTTPS configuration
   server {
       listen 443 ssl;
       server_name spotifybackend.shop;

       ssl_certificate /etc/letsencrypt/live/spotifybackend.shop/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/spotifybackend.shop/privkey.pem;
       ssl_protocols TLSv1.2 TLSv1.3;
       ssl_prefer_server_ciphers on;

       client_max_body_size 100M;

       location /static/ {
           alias /app/static/;
           expires 30d;
       }

       location /media/ {
           alias /app/media/;
           mp4_buffer_size 1m;
           mp4_max_buffer_size 5m;
           expires 7d;
       }

       location / {
           proxy_pass http://web:8000;
           proxy_set_header Host \System.Management.Automation.Internal.Host.InternalHost;
           proxy_set_header X-Real-IP \;
           proxy_set_header X-Forwarded-For \;
           proxy_set_header X-Forwarded-Proto \;
       }

       location /ws/ {
           proxy_pass http://web:8000;
           proxy_http_version 1.1;
           proxy_set_header Upgrade \;
           proxy_set_header Connection "upgrade";
           proxy_set_header Host \System.Management.Automation.Internal.Host.InternalHost;
           proxy_set_header X-Real-IP \;
       }
   }
